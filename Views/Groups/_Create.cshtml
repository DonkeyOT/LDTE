@model LDTE_Web.Models.Group
@using LDTE_Web.Models



@using (Html.BeginForm("CreateGroup", "Groups", FormMethod.Post, new { id = "this-form", name = "this-form" }))
{
     <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">Add Group</h4>
        </div>
        <div class="modal-body">
            @Html.HiddenFor(Model => Model.FormView)
            <div class="row">
                <div class="col-lg-12">
                    <div id="validationSummary" class="text-danger">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                </div>
           </div>
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-lg-8">
                            <div class="form-group">
                                @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GroupCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.GroupCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GroupAlias, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.GroupAlias, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GroupAlias, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.GroupDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.GroupDescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GroupDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button class="btn btn-warning" type="button" data-dismiss="modal">Cancel</button>
                            <button class="btn btn-primary" type="button" onclick="Save();">Save</button>
                        </div>
                    </div>
                </div>
            </div>

</div>

}
<script type="text/javascript">
    function Save() {
        jQuery.validator.unobtrusive.parse();
        jQuery.validator.unobtrusive.parse("#this-form");
        $("#this-form").valid()
        var frm = $("#this-form");
        var data = frm.serialize();
        var url = frm.attr("action");

        $.post(url, data, function (data) {
            if (data == 'SUCCESS') {
                $("#@Model.FormView").modal('hide');
                location.reload();
               
            }
        });
    }

    function Reset() {
        $('#this-form')[0].reset();
    }
</script>





